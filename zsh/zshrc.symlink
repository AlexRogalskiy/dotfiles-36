#--------------------------------------------------------
# Initial config prior to running oh-my-zsh
#--------------------------------------------------------

# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles
export PATH=$DOTFILES/bin:$PATH
export PATH=$PATH:/usr/local/sbin

# Add MySQL bin dir to path
export PATH=$PATH:/usr/local/mysql/bin

# Add npm bin to path
export PATH=$PATH:/usr/local/share/npm/bin

# A private directory for executables that aren't checked into my dotfiles repo
PRIVATE_BIN=$HOME/.private-bin
if [[ -a $PRIVATE_BIN ]]
then
    export PATH=$PRIVATE_BIN:$PATH
fi

# Enable tab completion
compinit

autoload -U colors && colors

PROMPT="%{$fg_bold[red]%}➜ %{$fg[green]%}%1~%{$reset_color%}$(git_prompt_info) %{$reset_color%}"

ZSH_THEME_GIT_PROMPT_PREFIX=" ("
ZSH_THEME_GIT_PROMPT_DIRTY="%{$reset_color%}) %{$fg_bold[yellow]%}✗%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$reset_color%})"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"

# Use standard directory listing colours
export LSCOLORS="exfxcxdxbxegedabagacad"


# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="generic-remote"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
PLUGINS=(brew django gibo git osx python sublime)
PLUGIN_DIR=".zsh-plugins"

for PLUGIN in $PLUGINS
do
    PLUGIN_PATH=$PLUGIN_DIR/$PLUGIN
    if [[ -a $PLUGIN_PATH ]]
    then
        echo Loading $PLUGIN
        source $PLUGIN_PATH
    else
        echo "Couldn't find $PLUGIN_PATH"
    fi
done

# Enable zmv for pattern-based renaming. Run zmv without args for docs
autoload -U zmv
# alias for zmv for no quotes
# mmv *.c.orig orig/*.c
alias mmv='noglob zmv -W'

# Add some useful aliases
alias gll='git log --graph --pretty=format:"%C(yellow)%h%Creset%C(cyan)%d%Creset %s %C(green)(%an, %cr)%Creset"'
alias gla='gll --all'
alias ll='ls -l'
alias ls='ls -G' # enable colorized output
alias history='fc -l 1'

export PIP_DOWNLOAD_CACHE=$HOME/.pip-download-cache

if [[ -a ~/.ec2 ]]
then
    export JAVA_HOME="$(/usr/libexec/java_home)"
    export EC2_PRIVATE_KEY="$(/bin/ls "$HOME"/.ec2/pk-*.pem | /usr/bin/head -1)"
    export EC2_CERT="$(/bin/ls "$HOME"/.ec2/cert-*.pem | /usr/bin/head -1)"
    export EC2_HOME="/usr/local/Library/LinkedKegs/ec2-api-tools/jars"
fi

if [[ -a /Applications ]]
then
    # OS X-specific stuff
    alias tm="mate"
    alias tmm="mate ."
    alias zshrc="subl ~/.zshrc"
    # alias ohmyzsh="subl ~/.oh-my-zsh"
    alias pljson="plutil -convert json -r -o -"
    alias subl="/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"
    alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
    alias fixopenwith='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user'

    kill-adobe-updater() {
        killall "AAM Updates Notifier" 2>/dev/null || echo "AAM Updater not running"
        rm ~/Library/LaunchAgents/com.adobe.AAM.Updater-1.0.plist 2>/dev/null || echo "LaunchAgent not found"
    }

    export PATH="/Applications/Postgres.app/Contents/MacOS/bin:$PATH"

    export AWS_RDS_HOME="$HOME/Library/Developer/RDSCli"
    export PATH="$AWS_RDS_HOME/bin:$PATH"

    export AWS_IAM_HOME="$HOME/Library/Developer/IAMCli"
    export PATH="$AWS_IAM_HOME/bin:$PATH"

    # Elastic Beanstalk tools
    # It's important that these use python 2.7, hence an alias rather
    # than adding the parent dir to $PATH
    alias eb="python2.7 $HOME/Library/Developer/AWS-ElasticBeanstalk-CLI/eb/macosx/python2.7/eb"

    # Add Elastic Beanstalk CLI tools to path
    export PATH="$HOME/Library/Developer/AWS-ElasticBeanstalk-CLI/api/bin:$PATH"

    export PIP_DOWNLOAD_CACHE=$HOME/Library/Caches/pip
    
    export JAVA_HOME=/Library/Java/Home
fi

export VIRTUAL_ENV_DISABLE_PROMPT=1
export WORKON_HOME=$HOME/.virtualenvs
vew_bootstrap=/usr/local/bin/virtualenvwrapper.sh
if [[ -a $vew_bootstrap ]]
then
    source $vew_bootstrap
fi

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
    source ~/.localrc
fi


#--------------------------------------------------------
# Now bootstrap oh-my-zsh
#--------------------------------------------------------

# source $ZSH/oh-my-zsh.sh

#--------------------------------------------------------
# Tweak oh-my-zsh default behaviour
#--------------------------------------------------------

# Fix up/down arrow behaviour to preferred weirdness
# Up/down arrows search back/forwards in the history for 
# a line beginning with the current line up to the cursor.
# This leaves the cursor in its original position.
# See zshzle(1) manpage for details.
# autoload history-search-end
# zle -N history-beginning-search-backward-end history-search-end
# zle -N history-beginning-search-forward-end  history-search-end

# bindkey '^[[A' history-beginning-search-backward-end
# bindkey '^[[B' history-beginning-search-forward-end

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search

[[ -n "${key[Up]}" ]] && bindkey "${key[Up]}" up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" down-line-or-beginning-search

# META-. inserts last word from previous history item
bindkey "^[." insert-last-word

# Turn off autocorrect
unsetopt correct_all

# Use hub (http://defunkt.io/hub/) if it's installed
# Do this after sourcing oh-my-zsh to pick up git tab completions
eval "$(hub alias -s)"

