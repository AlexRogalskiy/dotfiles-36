syn on

set nocp                    " turn off Vi compatibility mode
set esckeys
set ruler                   " turn on ruler
set backspace=indent,eol,start
set wildmenu                " turn on wild menu (:help wildmenu)
set noerrorbells            " don't make noise
set backup
set backupdir=$HOME/.vim/backup
set directory=$HOME/.vim/temp " directory for temp files

set backupskip=/tmp/*,/private/tmp/* " Don't back up temp files

set diffopt=iwhite          " ignore whitespace diffs

filetype on                 " Make VIM filetype-savvy

set showmatch              " show matching brackets
set mat=5                  " how many tenths of a second to blink matching brackets for
set hlsearch
set incsearch               " BUT do highlight as you type you search phrase

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Text Formatting/Layout
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set ai                      " autoindent
set tabstop=2               " tab spacing (settings below are just to unify it)
set softtabstop=2           " unify
set shiftwidth=2            " unify 
set expandtab               " convert tabs to spaces
set smarttab                " use tabs at the start of a line, spaces elsewhere
set formatoptions=tcrql   " set the options for comment formatting

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Perl
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let perl_extended_vars=1    " highlight advanced perl vars inside strings
autocmd BufRead    *.t   set syntax=perl " syntax highlighting for .t files

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Makefile
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType make set noexpandtab " make files must contain actual tabs, not spaces, at start of command lines

map <xF3> *	            " numeric keypad * key
nnoremap <silent> <F8> :TlistToggle<CR>  " F8 toggles Tag list on and off

" Open file at the line we last edited
if has("autocmd")
 au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
   \| exe "normal! g'\"" | endif
endif

